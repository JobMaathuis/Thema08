par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols){
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item])
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols, las = 1)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols){
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols)
## FOR LOOPJES OBTAINING DATA
for (beta_t in c(0.0015, 0.006, 0.0105)){
df <- run_model(beta_t = beta_t)
if (beta_t == 0.0015){
N_all <- data.frame('0.0015' = df$N)
p_all <- data.frame('0.0015' = df$p)
rho_all <- data.frame('0.0015' = df$rho)
}
if (beta_t == 0.006){
N_all <- data.frame(N_all, '0.006' = df$N)
p_all <- data.frame(p_all, '0.006' = df$p)
rho_all <- data.frame(rho_all, '0.006' = df$rho)
}
if (beta_t == 0.0105){
N_all <- data.frame(N_all, '0.0105' = df$N)
p_all <- data.frame(p_all, '0.0105' = df$p)
rho_all <- data.frame(rho_all, '0.0105' = df$rho)
}
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols)
?legends
?legend
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
legend(0, 0, legend = legends, col = line_cols)
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
legend(1.2, max(data), legend = legends, col = line_cols)
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
legend(1.2, 3, legend = legends, col = line_cols)
}
## FOR LOOPJES OBTAINING DATA
for (beta_t in c(0.0015, 0.006, 0.0105)){
df <- run_model(beta_t = beta_t)
if (beta_t == 0.0015){
N_all <- data.frame('0.0015' = df$N)
p_all <- data.frame('0.0015' = df$p)
rho_all <- data.frame('0.0015' = df$rho)
}
if (beta_t == 0.006){
N_all <- data.frame(N_all, '0.006' = df$N)
p_all <- data.frame(p_all, '0.006' = df$p)
rho_all <- data.frame(rho_all, '0.006' = df$rho)
}
if (beta_t == 0.0105){
N_all <- data.frame(N_all, '0.0105' = df$N)
p_all <- data.frame(p_all, '0.0105' = df$p)
rho_all <- data.frame(rho_all, '0.0105' = df$rho)
}
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
legend(1.2, 0, legend = legends, col = line_cols)
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
legend(0.2, 0, legend = legends, col = line_cols)
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
legend(0.2, 1, legend = legends, col = line_cols)
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(0.2, 1, legend = legends, col = line_cols)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
par(mfrow=c(2,2))
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
legend(0.2, 1, legend = legends, col = line_cols)
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
par(mfrow=c(2,2))
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
legend(0.2, 1000, legend = legends, col = line_cols)
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
par(mfrow=c(2,2))
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
legend(0.2, 10000, legend = legends, col = line_cols)
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
par(mfrow=c(2,2))
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
legend(1, 10000, legend = legends, col = line_cols)
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c('$\beta_t < \beta_p$', '$\beta_t = \beta_p$', '$\beta_t > \beta_p$')
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1, 10000, legend = legends, col = line_cols, xpd=NA)
## PLOT FUNCTION
plot_scenario <- function(datasets, y_labels, line_cols, legends){
plot_labels = c("A", "B", "C")
for (item in 1:length(datasets)){
data <- datasets[[item]]
for (scenario in 1:3){
if (scenario == 1){
plot(data[,scenario] ~ df$f, col = line_cols[scenario],
type = 'l', lwd = 3, ylim = c(0, max(data) * 1.25),
xlab = 'f', ylab = y_labels[item], las = 1)
text(x=0.05, y=max(data) * 1.2, labels = plot_labels[item], font = 2)
}
else{
lines(data[,scenario] ~ df$f, col = line_cols[scenario], lwd = 3)
}
}
}
}
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1, 10000, legend = legends, col = line_cols, xpd=NA)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1, 10000, legend = beta_t_legends, col = line_cols, xpd=NA)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1.1, 80000, legend = beta_t_legends, col = line_cols, xpd=NA)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1.1, 10000, legend = beta_t_legends, col = line_cols, xpd=NA)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1.1, 15000, legend = beta_t_legends, col = line_cols, xpd=NA)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1.1, 30000, legend = beta_t_legends, col = line_cols, xpd=NA)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1.1, 18000, legend = beta_t_legends, col = line_cols, xpd=NA)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1.1, 28000, legend = beta_t_legends, col = line_cols, xpd=NA)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1.05, 28000, legend = beta_t_legends, fill = line_cols, xpd=NA)
beta_t_data <- list(N_all, p_all, rho_all)
beta_t_labels <- c('population size', 'infection prevealance', 'spillover risk')
beta_t_cols <- c('orange', 'blue', 'purple')
beta_t_legends <- c(expression(paste(beta[T], " < ", beta[P])),expression(paste(beta[T], " = ", beta[P])),
expression(paste(beta[T], " > ", beta[P])))
par(mfrow=c(2,2))
plot_scenario(datasets = beta_t_data, y_labels = beta_t_labels, line_cols = beta_t_cols,
legends = beta_t_legends)
legend(1.05, 28000, legend = beta_t_legends, fill = beta_t_cols, xpd=NA)
